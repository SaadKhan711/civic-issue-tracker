spring.application.name=notification-service
server.port=8082

# =======================================================
# Kafka Consumer Configuration
# =======================================================
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# This tells the consumer to ignore the class name sent by the producer
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# This tells the consumer what class to use if the headers are missing.
# IMPORTANT: This package name now has the underscore to match your project.
spring.kafka.consumer.properties.spring.json.value.default.type=com.civictracker.notification_service.dto.IssueReportedEvent

# This trusts all packages for deserialization, which is simple for development.
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# =======================================================
# Email Configuration (Using Mailtrap for safe testing)
# =======================================================
spring.mail.host=smtp.mailtrap.io
spring.mail.port=587 
spring.mail.username=39d68dddff2022
spring.mail.password=280ef151411b50
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# =======================================================
# Custom Application Properties
# =======================================================
app.kafka.topic.issue-reported=issue-reported
app.user-service.url=http://localhost:8080/api/v1/users
